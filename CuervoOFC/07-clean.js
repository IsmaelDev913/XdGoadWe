const cleanHandler = async (bot, { reply, m }) => {
  const jid = m.key.remoteJid;
    // Traducci√≥n a ruso // Russian translation
  if (!jid) return reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π JID (—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ).");
  await bot.sendMessage(jid, { react: { text: "‚è±Ô∏è", key: m.key } });
  const metadata = await bot.groupMetadata(jid);
  const sender = m.key.participant || m.key.remoteJid;
  const admins = metadata.participants.filter(p => p.admin).map(p => p.id);

  if (!admins.includes(sender))
  return reply("> ‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.");
  const messages = await bot.groupMessages(jid, 50);
  const botMsgs = messages.filter(msg => msg.key.fromMe);

  for (let msg of botMsgs) {
  await bot.sendMessage(jid, { delete: msg.key });
  }

  await reply("> üßπ –°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.");
};
export default cleanHandler;
