

const promoteHandler = async (bot, { m, reply }) => {
  const jid = m.key.remoteJid;
  // Traducci√≥n a ruso // Russian translation
  if (!jid) return reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π JID (—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ).");
  await bot.sendMessage(jid, { react: { text: "‚è±Ô∏è", key: m.key } });
  const sender = m.key.participant || m.key.remoteJid;
  const groupMetadata = await bot.groupMetadata(jid);
  const admins = groupMetadata.participants.filter(p => p.admin).map(p => p.id);
  const isAdmin = admins.includes(sender);

  if (!isAdmin) {
  return await reply("> ‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.");

  }

  const mentioned = m.message?.extendedTextMessage?.contextInfo?.mentionedJid;

  if (!mentioned || mentioned.length === 0) {
  return await reply("> ‚ùó —É–ø–æ–º—è–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è.");
  }

  try {
  await bot.groupParticipantsUpdate(jid, [mentioned[0]], "promote");
  const nt = await reply(`> ‚úÖ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–æ–≤—ã—à–µ–Ω .`);
  await bot.sendMessage(jid, { react: { text: 'ü§ñ', key: nt.key } });
  } catch (e) {
  console.error("‚ùå Error al promover:", e);
  await reply("> ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑.");
  }

}
export default promoteHandler;
