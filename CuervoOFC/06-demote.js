

const demoteHandler = async (bot, { m, reply }) => {

  const jid = m.key.remoteJid;
  // Traducci√≥n a ruso // Russian translation
  if (!jid) return reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π JID (—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ).");
  await bot.sendMessage(jid, { react: { text: "‚è±Ô∏è", key: m.key } });
  const sender = m.key.participant || m.key.remoteJid;
  const groupMetadata = await sock.groupMetadata(jid);
  const admins = groupMetadata.participants.filter(p => p.admin).map(p => p.id);
  const isAdmin = admins.includes(sender);

  if (!isAdmin) {
  return await reply("> ‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.");
  }
  const mentioned = m.message?.extendedTextMessage?.contextInfo?.mentionedJid;
  if (!mentioned || mentioned.length === 0) {
  return await reply(">‚ùó –ü–æ–º–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–Ω–∏–∂–µ–Ω–∏—è.");
  }
  try {
    await bot.groupParticipantsUpdate(jid, [mentioned[0]], "demote");
    const nt = await reply(`> ‚õî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø–æ–Ω–∏–∂–µ–Ω.`);
    await bot.sendMessage(jid, { react: { text: 'ü§ñ', key: nt.key } });

  } catch (e) {
   console.error("‚ùå Error al degradar:", e);
   await reply("> ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–Ω–∏–∑–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è .");
  }

}
export default demoteHandler;
