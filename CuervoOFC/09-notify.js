const notifyHandler = async ({ reply, bot, args, m }) => {
  const jid = m.key.remoteJid;
  // Traducci√≥n a ruso // Russian translation
  if (!jid) return reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π JID (—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ).");
  await bot.sendMessage(jid, { react: { text: "‚è±Ô∏è", key: m.key } });
  try {
  if (!jid.endsWith("@g.us")) {
  await bot.sendMessage(jid, { text: "> ‚ùå –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø." }, { contextInfo: { externalAdReply: { title: "–Æ–º—ç–∫–æ –ë–æ—Ç", body: "—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–π –º–∞—Ñ—É–∞", mediaType: 1, previewType: 'PHOTO', thumbnailUrl: 'https://files.catbox.moe/651gmb.jpg', renderLargerThumbnail: true, sourceUrl: 'https://dash.cuervo-host.xyz' } }, }, { quoted: m });

  return;
  }

  const groupMetadata = await sock.groupMetadata(jid);
  const admins = groupMetadata.participants.filter(p => p.admin !== null).map(p => p.id);
  // Verificar si el que manda es admin

  if (!admins.includes(m.key.participant || m.participant)) {
  await bot.sendMessage(jid, { text: "> ‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã." }, { contextInfo: { externalAdReply: { title: "–Æ–º—ç–∫–æ –ë–æ—Ç", body: "—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–π –º–∞—Ñ—É–∞", mediaType: 1, previewType: 'PHOTO', thumbnailUrl: 'https://files.catbox.moe/651gmb.jpg', renderLargerThumbnail: true, sourceUrl: 'https://dash.cuervo-host.xyz' } }, }, { quoted: m });

  return;
  }

  if (args.length === 0) {
  await bot.sendMessage(jid, { text: "> ‚ùó –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: .—É–≤–µ–¥–æ–º–∏—Ç—å {—Å–æ–æ–±—â–µ–Ω–∏–µ}" }, { contextInfo: { externalAdReply: { title: "–Æ–º—ç–∫–æ –ë–æ—Ç", body: "—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–π –º–∞—Ñ—É–∞", mediaType: 1, previewType: 'PHOTO', thumbnailUrl: 'https://files.catbox.moe/651gmb.jpg', renderLargerThumbnail: true, sourceUrl: 'https://dash.cuervo-host.xyz' } }, }, { quoted: m });

  return;
  }

  const texto = args.join(" ");
  const nt = await bot.sendMessage(jid, { text: texto, mentions: groupMetadata.participants.map(p => p.id) }, { contextInfo: { externalAdReply: { title: "–Æ–º—ç–∫–æ –ë–æ—Ç", body: "—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–π –º–∞—Ñ—É–∞", mediaType: 1, previewType: 'PHOTO', thumbnailUrl: 'https://files.catbox.moe/651gmb.jpg', renderLargerThumbnail: true, sourceUrl: 'https://dash.cuervo-host.xyz' } }, }, { quoted: m });
  await bot.sendMessage(jid, { react: { text: 'ü§ñ', key: nt.key } });
  } catch (error) {
  console.error(error);
  await bot.sendMessage(jid, { text: "> ‚ùå –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã." } { contextInfo: { externalAdReply: { title: "–Æ–º—ç–∫–æ –ë–æ—Ç", body: "—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–π –º–∞—Ñ—É–∞", mediaType: 1, previewType: 'PHOTO', thumbnailUrl: 'https://files.catbox.moe/651gmb.jpg', renderLargerThumbnail: true, sourceUrl: 'https://dash.cuervo-host.xyz' } }, }, { quoted: m });
  }

};
export default notifyHandler;